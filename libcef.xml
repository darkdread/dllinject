<ApiMonitor>

    <Include Filename="Headers\common.h.xml" />
    
    <Module Name="LibCEF.dll" CallingConvention="CDECL" OnlineHelp="Google">

        <Variable Name="cef_string_t" Type="Struct">
            <Field Type="wchar_t*"    Name="str" />
            <Field Type="size_t"   Name="length" />
            <Field Type="void*"    Name="dtor" />
        </Variable>
        <Variable Name="const cef_string_t" Type="Alias" Base="cef_string_t" />
        <Variable Name="cef_string_t*" Type="Pointer" Base="cef_string_t" />
        <Variable Name="const cef_string_t*" Type="Pointer" Base="const cef_string_t" />

        <Variable Name="cef_string_userfree_t" Type="Pointer" Base="cef_string_t" />
        <Variable Name="const cef_string_userfree_t" Type="Alias" Base="cef_string_userfree_t" />
        <Variable Name="cef_string_userfree_t*" Type="Pointer" Base="cef_string_userfree_t" />
        <Variable Name="const cef_string_userfree_t*" Type="Pointer" Base="const cef_string_userfree_t" />


        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="_cef_binary_value_t" Type="Alias" Base="void" />
        <Variable Name="const _cef_binary_value_t" Type="Alias" Base="_cef_binary_value_t" />
        <Variable Name="_cef_binary_value_t*" Type="Pointer" Base="_cef_binary_value_t" />
        <Variable Name="const _cef_binary_value_t*" Type="Pointer" Base="const _cef_binary_value_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="_cef_completion_callback_t" Type="Alias" Base="void" />
        <Variable Name="const _cef_completion_callback_t" Type="Alias" Base="_cef_completion_callback_t" />
        <Variable Name="_cef_completion_callback_t*" Type="Pointer" Base="_cef_completion_callback_t" />
        <Variable Name="const _cef_completion_callback_t*" Type="Pointer" Base="const _cef_completion_callback_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_end_tracing_callback_t" Type="Alias" Base="void" />
        <Variable Name="const cef_end_tracing_callback_t" Type="Alias" Base="cef_end_tracing_callback_t" />
        <Variable Name="cef_end_tracing_callback_t*" Type="Pointer" Base="cef_end_tracing_callback_t" />
        <Variable Name="const cef_end_tracing_callback_t*" Type="Pointer" Base="const cef_end_tracing_callback_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_window_info_t" Type="Alias" Base="void" />
        <Variable Name="const cef_window_info_t" Type="Alias" Base="cef_window_info_t" />
        <Variable Name="cef_window_info_t*" Type="Pointer" Base="cef_window_info_t" />
        <Variable Name="const cef_window_info_t*" Type="Pointer" Base="const cef_window_info_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="_cef_client_t" Type="Alias" Base="void" />
        <Variable Name="const _cef_client_t" Type="Alias" Base="_cef_client_t" />
        <Variable Name="_cef_client_t*" Type="Pointer" Base="_cef_client_t" />
        <Variable Name="const _cef_client_t*" Type="Pointer" Base="const _cef_client_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="_cef_browser_settings_t" Type="Alias" Base="void" />
        <Variable Name="const _cef_browser_settings_t" Type="Alias" Base="_cef_browser_settings_t" />
        <Variable Name="_cef_browser_settings_t*" Type="Pointer" Base="_cef_browser_settings_t" />
        <Variable Name="const _cef_browser_settings_t*" Type="Pointer" Base="const _cef_browser_settings_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="_cef_request_context_t" Type="Alias" Base="void" />
        <Variable Name="const _cef_request_context_t" Type="Alias" Base="_cef_request_context_t" />
        <Variable Name="_cef_request_context_t*" Type="Pointer" Base="_cef_request_context_t" />
        <Variable Name="const _cef_request_context_t*" Type="Pointer" Base="const _cef_request_context_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_browser_t" Type="Alias" Base="void" />
        <Variable Name="const cef_browser_t" Type="Alias" Base="cef_browser_t" />
        <Variable Name="cef_browser_t*" Type="Pointer" Base="cef_browser_t" />
        <Variable Name="const cef_browser_t*" Type="Pointer" Base="const cef_browser_t" />


        <Variable Name="[cef_json_parser_options_t]" Type="Alias" Base="ULONG">
            <Display Name="ULONG" />
            <Flag>
                <Set Name="JSON_PARSER_RFC"                     Value="0x0" />
                <Set Name="JSON_PARSER_ALLOW_TRAILING_COMMAS"   Value="0x01" />
            </Flag>
        </Variable>
        <Variable Name="cef_json_parser_error_t" Type="Integer" Size="4">
            <Enum DefaultName="TRUE">
                <Set Name="JSON_NO_ERROR"                   Value="0" />
                <Set Name="JSON_INVALID_ESCAPE"             Value="1" />
                <Set Name="JSON_SYNTAX_ERROR"               Value="2" />
                <Set Name="JSON_UNEXPECTED_TOKEN"           Value="3" />
                <Set Name="JSON_TRAILING_COMMA"             Value="4" />
                <Set Name="JSON_TOO_MUCH_NESTING"           Value="5" />
                <Set Name="JSON_UNEXPECTED_DATA_AFTER_ROOT" Value="6" />
                <Set Name="JSON_UNSUPPORTED_ENCODING"       Value="7" />
                <Set Name="JSON_UNQUOTED_DICTIONARY_KEY"    Value="8" />
                <Set Name="JSON_PARSE_ERROR_COUNT"          Value="9" />
            </Enum>
            <Success Return="Equal" Value="0" />
        </Variable>
        <Variable Name="cef_json_parser_error_t*" Type="Pointer" Base="cef_json_parser_error_t" />


        <Variable Name="cef_urlparts_t" Type="Struct">
            <Field Type="cef_string_t"  Name="spec" />
            <Field Type="cef_string_t"  Name="scheme" />
            <Field Type="cef_string_t"  Name="username" />
            <Field Type="cef_string_t"  Name="password" />
            <Field Type="cef_string_t"  Name="host" />
            <Field Type="cef_string_t"  Name="port" />
            <Field Type="cef_string_t"  Name="origin" />
            <Field Type="cef_string_t"  Name="path" />
            <Field Type="cef_string_t"  Name="query" />
        </Variable>
        <Variable Name="const cef_urlparts_t" Type="Alias" Base="cef_urlparts_t" />
        <Variable Name="cef_urlparts_t*" Type="Pointer" Base="cef_urlparts_t" />
        <Variable Name="const cef_urlparts_t*" Type="Pointer" Base="const cef_urlparts_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_value_t" Type="Alias" Base="void" />
        <Variable Name="const cef_value_t" Type="Alias" Base="cef_value_t" />
        <Variable Name="cef_value_t*" Type="Pointer" Base="cef_value_t" />
        <Variable Name="const cef_value_t*" Type="Pointer" Base="const cef_value_t" />


        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_v8handler_t" Type="Alias" Base="void" />
        <Variable Name="const cef_v8handler_t" Type="Alias" Base="cef_v8handler_t" />
        <Variable Name="cef_v8handler_t*" Type="Pointer" Base="cef_v8handler_t" />
        <Variable Name="const cef_v8handler_t*" Type="Pointer" Base="const cef_v8handler_t" />


        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_v8value_t" Type="Alias" Base="void" />
        <Variable Name="const cef_v8value_t" Type="Alias" Base="cef_v8value_t" />
        <Variable Name="cef_v8value_t*" Type="Pointer" Base="cef_v8value_t" />
        <Variable Name="const cef_v8value_t*" Type="Pointer" Base="const cef_v8value_t" />

        <!-- TODO: maybe make this the actual struct? -->
        <Variable Name="cef_v8context_t" Type="Alias" Base="void" />
        <Variable Name="const cef_v8context_t" Type="Alias" Base="cef_v8context_t" />
        <Variable Name="cef_v8context_t*" Type="Pointer" Base="cef_v8context_t" />
        <Variable Name="const cef_v8context_t*" Type="Pointer" Base="const cef_v8context_t" />


        <Category Name="LibCEF/Misc" />
        <Api Name="cef_add_cross_origin_whitelist_entry">
            <Param Type="const cef_string_t*" Name="source_origin" />
            <Param Type="const cef_string_t*" Name="target_protocol" />
            <Param Type="const cef_string_t*" Name="target_domain" />
            <Param Type="int"                 Name="allow_target_subdomains" />
            <Return Type="int" />
        </Api>

        <Api Name="cef_add_web_plugin_directory">
            <Param Type="const cef_string_t*" Name="dir" />
            <Return Type="void" />
        </Api>


        <Api Name="cef_add_web_plugin_path">
            <Param Type="const cef_string_t*" Name="path" />
            <Return Type="void" />
        </Api>

        <Api Name="cef_api_hash">
            <Param Type="int" Name="entry" />
            <Return Type="const char*" />
        </Api>

        <!-- Tracing funcs -->
        <Category Name="LibCEF/Tracing" />
        <Api Name="cef_begin_tracing">
            <Param Type="const cef_string_t*"             Name="categories" />
            <Param Type="_cef_completion_callback_t*"     Name="callback" />
            <Return Type="int" />
        </Api>
        <Api Name="cef_end_tracing">
            <Param Type="const cef_string_t*"             Name="tracing_file" />
            <Param Type="cef_end_tracing_callback_t*"     Name="callback" />
            <Return Type="int" />
        </Api>

<!-- TODO:
cef_trace_counter
cef_trace_counter_id
cef_trace_event_async_begin
cef_trace_event_async_end
cef_trace_event_async_step_into
cef_trace_event_async_step_past
cef_trace_event_begin
cef_trace_event_end
cef_trace_event_instant -->

        <!-- Base64 funcs -->
        <Category Name="LibCEF/Base64" />
        <Api Name="cef_base64decode">
            <Param Type="const cef_string_t*" Name="data" />
            <Return Type="_cef_binary_value_t*" />
        </Api>

        <Api Name="cef_base64encode">
            <Param Type="const void*" Name="data" />
            <Param Type="size_t"      Name="dataSize" />
            <Return Type="cef_string_userfree_t" />
        </Api>

        <!-- Browser funcs -->
        <Category Name="LibCEF/Browser" />
        <Api Name="cef_browser_host_create_browser">
            <Param Type="const cef_window_info_t*"       Name="windowInfo" />
            <Param Type="_cef_client_t*"                 Name="client" />
            <Param Type="const cef_string_t*"            Name="url" />
            <Param Type="const _cef_browser_settings_t*" Name="settings" />
            <Param Type="_cef_request_context_t*"        Name="request_context" />
            <Return Type="int" />
        </Api>

        <Api Name="cef_browser_host_create_browser_sync">
            <Param Type="const cef_window_info_t*"       Name="windowInfo" />
            <Param Type="_cef_client_t*"                 Name="client" />
            <Param Type="const cef_string_t*"            Name="url" />
            <Param Type="const _cef_browser_settings_t*" Name="settings" />
            <Param Type="_cef_request_context_t*"        Name="request_context" />
            <Return Type="cef_browser_t*" />
        </Api>



        <!-- Parse funcs -->
        <Category Name="LibCEF/Parse" />
        <Api Name="cef_parse_json">
            <Param Type="const cef_string_t*"         Name="json_string" />
            <Param Type="[cef_json_parser_options_t]" Name="options" />
            <Return Type="cef_value_t*" />
        </Api>

        <Api Name="cef_parse_jsonand_return_error">
            <Param Type="const cef_string_t*"         Name="json_string" />
            <Param Type="[cef_json_parser_options_t]" Name="options" />
            <Param Type="cef_json_parser_error_t*"    Name="error_code_out" />
            <Param Type="cef_string_t*"               Name="error_msg_out" />
            <Return Type="cef_value_t*" />
        </Api>

        <Api Name="cef_parse_url">
            <Param Type="const cef_string_t*"   Name="url" />
            <Param Type="cef_urlparts_t*"      Name="parts" />
            <Return Type="int" />
        </Api>

        <!-- TODO: cef_parse_csscolor -->



        <!-- Message Loop funcs -->
        <Category Name="LibCEF/Message Loop" />
        <Api Name="cef_run_message_loop">
            <Return Type="void" />
        </Api>
        <Api Name="cef_quit_message_loop">
            <Return Type="void" />
        </Api>
        <Api Name="cef_do_message_loop_work">
            <Return Type="void" />
        </Api>

        <!-- Plugin and Extensions -->
        <Category Name="LibCEF/Plugins and Extensions" />
        <Api Name="cef_register_extension">
            <Param Type="const cef_string_t*"   Name="extension_name" />
            <Param Type="const cef_string_t*"   Name="javascript_code" />
            <Param Type="cef_v8handler_t*"      Name="handler" />
            <Return Type="int" />
        </Api>

<!-- TODO:
cef_get_extensions_for_mime_type
cef_force_web_plugin_shutdown
cef_is_web_plugin_unstable
cef_refresh_web_plugins
cef_register_web_plugin_crash
cef_remove_web_plugin_path
cef_unregister_internal_web_plugin
cef_visit_web_plugin_info-->


        <!-- V8 -->
        <Category Name="LibCEF/V8" />
        <Api Name="cef_v8context_get_current_context">
            <Return Type="cef_v8context_t*" />
        </Api>
        <Api Name="cef_v8context_get_entered_context">
            <Return Type="cef_v8context_t*" />
        </Api>
        <Api Name="cef_v8context_in_context">
            <Return Type="int" />
        </Api>
        <Api Name="cef_v8value_create_function">
            <Param Type="const cef_string_t*"   Name="name" />
            <Param Type="cef_v8handler_t*"      Name="handler" />
            <Return Type="cef_v8value_t*" />
        </Api>
        <Api Name="cef_v8value_create_string">
            <Param Type="const cef_string_t*"   Name="value" />
            <Return Type="cef_v8value_t*" />
        </Api>

<!-- TODO:
cef_v8stack_trace_get_current
cef_v8value_create_array
cef_v8value_create_bool
cef_v8value_create_date
cef_v8value_create_double

cef_v8value_create_int
cef_v8value_create_null
cef_v8value_create_object
cef_v8value_create_uint
cef_v8value_create_undefined-->
    </Module>
</ApiMonitor>

<!-- TODO:

cef_binary_value_create

cef_clear_cross_origin_whitelist
cef_clear_scheme_handler_factories
cef_command_line_create
cef_command_line_get_global
cef_cookie_manager_create_manager
cef_cookie_manager_get_global_manager
cef_create_url
cef_currently_on
cef_dictionary_value_create

cef_drag_data_create
cef_enable_highdpi_support

cef_execute_process

cef_format_url_for_security_display
cef_get_current_platform_thread_handle
cef_get_current_platform_thread_id

cef_get_geolocation
cef_get_mime_type
cef_get_min_log_level
cef_get_path
cef_get_vlog_level
cef_initialize

cef_launch_process
cef_list_value_create
cef_log
cef_now_from_system_trace_time
cef_post_data_create
cef_post_data_element_create
cef_post_delayed_task
cef_post_task
cef_print_settings_create
cef_process_message_create

cef_register_scheme_handler_factory

cef_remove_cross_origin_whitelist_entry

cef_request_context_create_context
cef_request_context_get_global_context
cef_request_create
cef_resource_bundle_get_global
cef_response_create
cef_set_osmodal_loop
cef_shutdown
cef_stream_reader_create_for_data
cef_stream_reader_create_for_file
cef_stream_reader_create_for_handler
cef_stream_writer_create_for_file
cef_stream_writer_create_for_handler
cef_string_ascii_to_utf16
cef_string_ascii_to_wide
cef_string_list_alloc
cef_string_list_append
cef_string_list_clear
cef_string_list_copy
cef_string_list_free
cef_string_list_size
cef_string_list_value
cef_string_map_alloc
cef_string_map_append
cef_string_map_clear
cef_string_map_find
cef_string_map_free
cef_string_map_key
cef_string_map_size
cef_string_map_value
cef_string_multimap_alloc
cef_string_multimap_append
cef_string_multimap_clear
cef_string_multimap_enumerate
cef_string_multimap_find_count
cef_string_multimap_free
cef_string_multimap_key
cef_string_multimap_size
cef_string_multimap_value
cef_string_userfree_utf16_alloc
cef_string_userfree_utf16_free
cef_string_userfree_utf8_alloc
cef_string_userfree_utf8_free
cef_string_userfree_wide_alloc
cef_string_userfree_wide_free
cef_string_utf16_clear
cef_string_utf16_cmp
cef_string_utf16_set
cef_string_utf16_to_utf8
cef_string_utf16_to_wide
cef_string_utf8_clear
cef_string_utf8_cmp
cef_string_utf8_set
cef_string_utf8_to_utf16
cef_string_utf8_to_wide
cef_string_wide_clear
cef_string_wide_cmp
cef_string_wide_set
cef_string_wide_to_utf16
cef_string_wide_to_utf8
cef_task_runner_get_for_current_thread
cef_task_runner_get_for_thread
cef_time_delta
cef_time_from_doublet
cef_time_from_timet
cef_time_now
cef_time_to_doublet
cef_time_to_timet
cef_translator_test_create
cef_translator_test_object_child_child_create
cef_translator_test_object_child_create
cef_translator_test_object_create

cef_uridecode
cef_uriencode
cef_urlrequest_create

cef_value_create
cef_version_info

cef_write_json
cef_xml_reader_create
cef_zip_reader_create
create_context_shared

ClearBreakpadPipeEnvironmentVariable
ClearCrashKeyValueImpl
CrashForException
DumpProcess
DumpProcessWithoutCrash
GetHandleVerifier
InjectDumpForHangDebugging
InjectDumpProcessWithoutCrash
IsSandboxedProcess
SetCrashKeyValueImpl
TerminateProcessWithoutDump

-->